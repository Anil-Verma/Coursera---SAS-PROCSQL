*creating the libname sq****;
libname sq '/home/PATH/ESQ1M6/data';

***		DISTINCT	**;
PROC SQL;
	SELECT DISTINCT STATE
	FROM SQ.CUSTOMER;
QUIT;


PROC SQL;
	SELECT DISTINCT EMPLOYED
	FROM SQ.CUSTOMER;
QUIT;

PROC SQL;
	SELECT DISTINCT EMPLOYED, MARRIED
	FROM SQ.CUSTOMER;
QUIT;

/*		SUMMARY FUNCTIONS		***/
PROC SQL;
	SELECT MAX(POPESTIMATE1) AS MAX_EST, 
			MIN(POPESTIMATE1) AS MIN_EST, 
			AVG(POPESTIMATE1) AS AVG_EST
	FROM SQ.STATEPOPULATION;
QUIT;


**			MAXIMUM ACROSS COLUMN;
PROC SQL;
	SELECT NAME, POPESTIMATE1, POPESTIMATE2, POPESTIMATE3,
			MAX(POPESTIMATE1, POPESTIMATE2, POPESTIMATE3) AS MAX_EST FORMAT=COMMA16.
	FROM SQ.STATEPOPULATION;
QUIT;


/***		EXPLORING SUMMARY FUNCTION IN STATEPOPULATION	****/
PROC SQL;
	DESCRIBE TABLE SQ.STATEPOPULATION;
	
	SELECT NAME, POPESTIMATE1, POPESTIMATE2, POPESTIMATE3
	FROM SQ.STATEPOPULATION;
QUIT;


PROC SQL;
	SELECT COUNT(POPESTIMATE1) AS TOTALSTATES,
			MEAN(POPESTIMATE1) AS MEAN FORMAT=COMMA16.,
			MAX(POPESTIMATE1) AS MAX FORMAT=COMMA16.,
			MIN(POPESTIMATE1) AS MIN FORMAT=COMMA16.,
			STD(POPESTIMATE1) AS STD FORMAT=COMMA16.
	FROM SQ.STATEPOPULATION;
QUIT;

***		 USING SAS PROC METHOD		***;
PROC MEANS DATA=SQ.STATEPOPULATION MAXDEC=0;
	VAR POPESTIMATE1;
RUN;


***	SUMMARIZING ACROSS COLUMNS	***;
PROC SQL;
	SELECT NAME,
			POPESTIMATE1 FORMAT=COMMA16.,
			POPESTIMATE2 FORMAT=COMMA16.,
			POPESTIMATE3 FORMAT=COMMA16.,
			MAX(POPESTIMATE1, POPESTIMATE2, POPESTIMATE3) AS MAX_EST FORMAT=COMMA16.,
			MIN(POPESTIMATE1, POPESTIMATE2, POPESTIMATE3) AS MIN_EST FORMAT=COMMA16.,
			MEAN(POPESTIMATE1, POPESTIMATE2, POPESTIMATE3) AS MEAN_EXT FORMAT=COMMMA16.
	FROM SQ.STATEPOPULATION;
QUIT;


****		COUNT AS ARGUMENT		***;
PROC SQL;
	SELECT COUNT(*) AS TOTAL_CUSTOMERS FORMAT=COMMA12.
	FROM SQ.CUSTOMER;
QUIT;


**		Practice ACTIVITY COUNT	****;
PROC SQL;
	SELECT COUNT(*) AS TOTAL_ROWS FORMAT=COMMA12.,
			COUNT(MARRIED) AS MARITAL_STATUS FORMAT=COMMA12.
	FROM SQ.CUSTOMER;
QUIT;


PROC SQL;
	SELECT COUNT(*) AS TOTAL_ROWS FORMAT=COMMA12.,
			COUNT(DISTINCT MARRIED) AS MARITAL_STATUS FORMAT=COMMA12.
	FROM SQ.CUSTOMER;
QUIT;


/**********			GROUPING THE DATA			*****/

****** HOW MANY CUSTOMERS ARE IN EACH STATE?;
PROC SQL NUMBER;
	SELECT STATE, 
			COUNT(*) AS TOTAL_CUSTOMERS FORMAT=COMMA7.
	FROM SQ.CUSTOMER
	GROUP BY STATE
	ORDER BY TOTAL_CUSTOMERS DESC;
QUIT;


**	HOW MANY CUSTOMERS IN EACH STATE WHO HAVE BANK IDS***;
PROC SQL NUMBER;
	SELECT STATE,
			COUNT(*) AS TOTAL_CUSTOMER FORMAT=COMMA7.
	FROM SQ.CUSTOMER
	WHERE BANKID IS NOT NULL
	GROUP BY STATE
	ORDER BY TOTAL_CUSTOMER DESC;
QUIT;



** HOW MANY CUSTOMERS IN EACH STATE WHO HAVE BANK ID AND CUSTOEMRS ARE MORE THAN 6000;
PROC SQL;
	SELECT STATE,
			COUNT(*) AS TOTAL_CUSTOMER FORMAT=COMMA7.
	FROM SQ.CUSTOMER
	WHERE BANKID IS NOT NULL
	GROUP BY STATE
	HAVING TOTAL_CUSTOMER > 6000
	ORDER BY TOTAL_CUSTOMER DESC;
QUIT;


/**********			ANALYZIG GROUP OF DATA		****/
PROC SQL;
	SELECT STATE,
			COUNT(*) AS TotalCustomers FORMAT=COMMA7.
	FROM SQ.CUSTOMER
	GROUP BY STATE
	ORDER BY TotalCustomers DESC;
QUIT;

PROC SQL;
	SELECT BANKID,
			COUNT(*) AS TotalCustomers FORMAT=COMMA7.
	FROM SQ.CUSTOMER
	GROUP BY BANKID
	ORDER BY TotalCustomers DESC;
QUIT;


PROC SQL;
	SELECT BANKID, EMPLOYED,
			COUNT(*) AS TotalCustomers FORMAT=COMMA7.
	FROM SQ.CUSTOMER
	GROUP BY BANKID, EMPLOYED
	ORDER BY TotalCustomers DESC;
QUIT;

PROC SQL;
	SELECT BANKID, EMPLOYED,
			COUNT(*) AS TotalCustomers FORMAT=COMMA7.
	FROM SQ.CUSTOMER
	GROUP BY BANKID, EMPLOYED
	HAVING TotalCustomers > 10000
	ORDER BY TotalCustomers DESC;
QUIT;


/**********		SUMMARIZING DATE AND TIME		*********/

***	EXTRACTING DATE AND TIME FROM DATETIME DATA TYPE	***;
PROC SQL;
	SELECT DATETIME,
			DATEPART(DATETIME) AS DATE FORMAT=DATE9.,
			TIMEPART(DATETIME) AS TIME FORMAT=TIME.,
			AMOUNT
	FROM SQ.TRANSACTION(OBS=1000);
QUIT;
			


** CALCUALTING MEDIAN SPENT BY MONTH	***;
PROC SQL;
	SELECT MONTH(DATEPART(DATETIME)) AS MONTH,
			MEDIAN(AMOUNT) AS MEDIAN_SPENT FORMAT=DOLLAR16.
	FROM SQ.TRANSACTION
	GROUP BY MONTH;
QUIT;



***** CALCUALTING MEDIAN SPENT BY QUARTER***;
PROC SQL;
	SELECT QTR(DATEPART(DATETIME)) AS QUARTER,
			MEDIAN(AMOUNT) AS MEDIAN_SPENT FORMAT=DOALLR16.
	FROM SQ.TRANSACTION
	GROUP BY QUARTER;
QUIT;


/********			SUMMARIZING DATA USING BOOLEAN EXPRESSION		****/

PROC SQL;
	SELECT STATE,
			YRDIF(DOB, TODAY(), 'AGE') AS AGE FORMAT=3.
	FROM SQ.CUSTOMER(OBS=100);
QUIT;

PROC SQL;
	SELECT STATE,
			YRDIF(DOB, TODAY(), 'AGE') < 25 AS UNDER25,
			YRDIF(DOB, TODAY(), 'AGE') > 64 AS OVER64
	FROM SQ.CUSTOMER(OBS=100);
QUIT;

PROC SQL NUMBER;
	SELECT STATE,
			SUM(YRDIF(DOB, TODAY(), 'AGE') < 25) AS UNDER25,
			SUM(YRDIF(DOB, TODAY(), 'AGE') > 64) AS OVER64
	FROM SQ.CUSTOMER
	GROUP BY STATE;
QUIT;


/*****************	 	PRACTICE LEVEL 1		****************/

TITLE1 "Unique Country Codes";
PROC SQL NUMBER;
	SELECT DISTINCT COUNTRYCODE
	FROM SQ.GLOBALFULL
	ORDER BY CountryCode;
QUIT;

TITLE;


TITLE1 "Unique Country Codes";
TITLE2 "Count of Unique Country Codes";
PROC SQL NUMBER;
	SELECT DISTINCT COUNTRYCODE, 
			COUNT(COUNTRYCODE) AS CountryCount
	FROM SQ.GLOBALFULL
	GROUP BY COUNTRYCODE
	ORDER BY CountryCode;
QUIT;

TITLE;


/*****************	 	PRACTICE LEVEL 2		****************/
TITLE1 "Customers with High Percentage of Suspicious Transactions";
PROC SQL NUMBER;
	SELECT CUSTOMERID,
			COUNT(*) AS TOTAL_TRANSACTIONS,
			SUM(AMOUNT>=500) AS SUSPICIOUS_TRANSACTIONS,
			(CALCULATED SUSPICIOUS_TRANSACTIONS / CALCULATED TOTAL_TRANSACTIONS) AS PCTSUSPICIOUS 
				FORMAT=PERCENT8.2
	FROM SQ.TRANSACTIONFULL(OBS=1000)
	WHERE SERVICE NE 'University'
	GROUP BY CUSTOMERID
	HAVING CALCULATED PCTSUSPICIOUS > .05
	ORDER BY CALCULATED PCTSUSPICIOUS DESC;

TITLE;




